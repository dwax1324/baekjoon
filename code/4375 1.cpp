#include <bits/stdc++.h>
using namespace std;

// 정수론

// 잘 모르겠어서 구글링했다.

// 1을 계속 붙이다가 N으로 나눈 나머지가 0이 되도록 하고 싶습니다.
//정말로 1을 계속 붙여서 수를 무리하게 키우지 말고, N으로 나눈 나머지만 생각해 봅시다.
// 일단 N=1이면 답은 당연히 1입니다. 이제 N>1이라고 가정합시다.
// 처음에는 한 자리이고, 나머지는 1입니다. 여기에 1을 붙이는 건 나머지에 10을 곱한 뒤 1을 더하고,
// 다시 N으로 나눈 나머지를 구하는 것과 같습니다. 즉 a = (a*10+1)%N입니다.
// a가 0이 될 때까지 몇 번의 연산이 이루어지는지 보면 됩니다.
// 답이 없거나 극도로 커서 시간초과가 나진 않을까요? 그렇지 않습니다.
// N이 2나 5의 배수가 아니면 답은 항상 존재하고, 최소 자리수가 N 이하입니다.
// 증명은 다음과 같습니다. 비둘기집의 원리에 의해 1, 11, 111, ..., 11...11 (1이 N+1개)
// 중 N으로 나눈 나머지가 같은 두 수가 존재합니다. 두 수 중 큰 수에서 작은 수를 뺀 11...1100...00은 N의 배수입니다.
// N은 2나 5의 배수가 아니므로 여기에서 0을 제거한 11...11도 N의 배수이고, 자리수는 N 이하입니다.
// 출처 https://m.blog.naver.com/PostView.nhn?blogId=jh05013&logNo=221073652549&proxyReferer=https:%2F%2Fwww.google.com%2F

int main() {
    int n;
    while (~scanf("%d", &n)) {
        int k = 1;
        int cnt = 0;
        while (1) {
            cnt++;
            if (k % n == 0) break;
            k = (k * 10 + 1) % n;
        }
        cout << cnt << '\n';
    }
}